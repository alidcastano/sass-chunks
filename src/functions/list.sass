// List Functions
//  @function list-apply
//  @function list-fold
//  @function list-filter

// -------------------------------
//  List Functions
// -------------------------------

// List Apply
// @summary apply function to every item in a list
//
// @param {function} converstion function
// @param {list} list to convert
// @param {args} arguments for the passed function
//
@function list-apply($fn, $list, $args...)
  $new-list: ()
  @each $value in $list
    $new-list: append($new-list, call($fn, $value, $args))
  @return $new-list

// List Fold
// @summary reduce a list to a single value
//
// @param {function} conversion function
// @param {list} list to convert
// @param {initial} initial value to fold over
// @param {args} arguments for the passed function
//
// @note You can't leave out the initial value (can't have default arguments
// before rest arguments), so if you don't want an initial value, set it to null.
//
@function list-fold($fn, $list, $initial, $args...)
  $start: 1
  @if $initial == null
      // If there's no initial value, use the first in the list.
      $start: 2
      $initial: nth($list, 1)
  $prev: $initial
  @for $i from $start through length($list)
      $next: nth($list, $i)
      $prev: call($fn, $prev, $next, $args...)
  @return $prev


// List Filter
// @summary if item passes predicate add it to list
//
// @param {function} filter function
// @param {list} list to filter
// @param {args} arguments for the passed function
//
@function list-filter($fn, $list, $args...)
  $new-list: ()
  @each $item in $list
      @if call($fn, $item, $args...)
          $new-list: append($new-list, $item)
  @return $new-list


// List Seperate
// @summary seperates a items in list by any given value
//
// @param {list} list to seperate
// @param {seperator} [comma, space, or, and, ' ', ',']
//
// @note this function is not the same as the sass list-seperator function
//
@function list-separate($list, $seperator)
  $new-list: ()
  $seperator: get-seperator($seperator)
  @for $i from 1 through length($list)
    $value: unquote(nth($list, $i))
    @if $i == length($list)
      // don't add seperator to list w/ single value or to the last value in list
      $new-list: append($new-list, $value)
    @else
      $new-list: join($new-list, append($value, $seperator))
  @return $new-list


// -------------------------------
//  Helpers
// -------------------------------

// Get Seperator
// @summary converts semantic version of seperator to appropriate value
//
// @param {seperator}[comma / space / or / and, ' ', ',']
//
@function get-seperator($seperator)
  @if $seperator == 'space'
    @return ' '
  @else if $seperator == 'comma'
    @return ','
  @else
    @return $seperator
